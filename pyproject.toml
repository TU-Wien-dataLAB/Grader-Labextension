[build-system]
requires = ["hatchling>=1.5.0", "jupyterlab>=4.0.0,<5", "hatch-nodejs-version>=0.3.2"]
build-backend = "hatchling.build"

[project]
name = "grader-labextension"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"
classifiers = [
    "Framework :: Jupyter",
    "Framework :: Jupyter :: JupyterLab",
    "Framework :: Jupyter :: JupyterLab :: 4",
    "Framework :: Jupyter :: JupyterLab :: Extensions",
    "Framework :: Jupyter :: JupyterLab :: Extensions :: Prebuilt",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "urllib3>=1.26.6",
    "traitlets>=5.0.5",
    "tornado>=6.2",
    "grader-service>=0.3.0",
    "hatch>=1.7",
    "hatch-jupyter-builder>=0.5",
    "hatch-nodejs-version",
    "jupyterlab<5,>=4.0.0",
    "jupyter_server>=2.0.1,<3"
]
dynamic = ["version", "description", "authors", "urls", "keywords"]

[project.optional-dependencies]
test = [
    "coverage",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-jupyter[server]>=0.6.0"
]

[tool.tbump.version]
current = "0.3.0"

regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  \-?
  (?P<pre>((a|b|rc|dev|nightly)\d+)?)
  '''

[tool.tbump.git]
message_template = "Bump labextension to {new_version}"
tag_template = "grader-labextension-{new_version}"

[[tool.tbump.file]]
src = "package.json"
search = "\"version\": \"{current_version}\""

[[tool.tbump.file]]
src = "binder/environment.yml"
search = "grader-labextension=={current_version}"

[tool.hatch.version]
source = "nodejs"

[tool.hatch.metadata.hooks.nodejs]
fields = ["description", "authors", "urls"]

[tool.hatch.build.targets.sdist]
artifacts = ["grader_labextension/labextension"]
exclude = [".github", "binder"]

[tool.hatch.build.targets.wheel.shared-data]
"grader_labextension/labextension" = "share/jupyter/labextensions/grader-labextension"
"install.json" = "share/jupyter/labextensions/grader-labextension/install.json"
"jupyter-config/server-config" = "etc/jupyter/jupyter_server_config.d"


[tool.hatch.build.hooks.jupyter-builder]
dependencies = ["hatch-jupyter-builder>=0.5"]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = [
    "grader_labextension/labextension/static/style.js",
    "grader_labextension/labextension/package.json",
]
skip-if-exists = ["grader_labextension/labextension/static/style.js"]

[tool.hatch.build.hooks.jupyter-builder.build-kwargs]
build_cmd = "build:prod"
npm = ["jlpm"]

[tool.hatch.build.hooks.jupyter-builder.editable-build-kwargs]
build_cmd = "install:extension"
npm = ["jlpm"]
source_dir = "src"
build_dir = "grader_labextension/labextension"

[tool.jupyter-releaser.options]
version_cmd = "hatch version"

[tool.jupyter-releaser.hooks]
before-build-npm = [
    "python -m pip install 'jupyterlab>=4.0.0,<5'",
    "jlpm",
    "jlpm build:prod"
]
before-build-python = ["jlpm clean:all"]

[tool.check-wheel-contents]
ignore = ["W002"]
